[gd_resource type="VisualShader" load_steps=39 format=3 uid="uid://mh35c32t68cc"]

[ext_resource type="Texture2D" uid="uid://btg2easi6xk38" path="res://Assets/Player/PlayerIdMap.png" id="1_5dc5i"]
[ext_resource type="Script" path="res://Scripts/IdMap/Idmap.gd" id="1_hvmal"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_lkwsp"]
constant = Color(0, 1, 1, 1)

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_qudjx"]
constant = Color(1, 0, 1, 1)

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_npkb6"]
initialized = true
script = ExtResource("1_hvmal")

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_m42po"]
initialized = true
script = ExtResource("1_hvmal")

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_l2k2c"]
initialized = true
script = ExtResource("1_hvmal")

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_wpkxf"]
initialized = true
script = ExtResource("1_hvmal")

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_8yeyg"]
initialized = true
script = ExtResource("1_hvmal")

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_dcxqm"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_0gp8y"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_u22jc"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_ta8pb"]
texture = ExtResource("1_5dc5i")

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_wm844"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_h2aen"]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_yqupr"]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_s4jx1"]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_43k21"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_xnprb"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_s3j40"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_uqxyv"]
parameter_name = "CoreColor"
qualifier = 2
default_value_enabled = true

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ssmoy"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_b7iq7"]
initialized = true
script = ExtResource("1_hvmal")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_jw6el"]
source = 5

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_jxefm"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeTextureParameterTriplanar" id="VisualShaderNodeTextureParameterTriplanar_isqif"]
parameter_name = "CoreTexture"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_7en48"]
input_name = "time"

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_qh4xw"]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_tueox"]
op_type = 0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_8oygu"]
default_input_values = [0, 0.0, 1, 0.5]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_h7ki5"]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeIntConstant" id="VisualShaderNodeIntConstant_hlrwq"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_c01am"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_de2k7"]
constant = Color(1, 0, 0, 1)

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_phpm1"]
constant = Color(0, 0, 1, 1)

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_o4e6d"]
constant = Color(0, 1, 0, 1)

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_3b5rj"]
constant = Color(1, 1, 0, 1)

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_me417"]
initialized = true
script = ExtResource("1_hvmal")

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D CoreTexture;
instance uniform vec4 CoreColor : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);
uniform sampler2D tex_frg_2;


// TextureParameterTriplanar
	vec4 triplanar_texture(sampler2D p_sampler, vec3 p_weights, vec3 p_triplanar_pos) {
		vec4 samp = vec4(0.0);
		samp += texture(p_sampler, p_triplanar_pos.xy) * p_weights.z;
		samp += texture(p_sampler, p_triplanar_pos.xz) * p_weights.y;
		samp += texture(p_sampler, p_triplanar_pos.zy * vec2(-1.0, 1.0)) * p_weights.x;
		return samp;
	}

	uniform vec3 triplanar_scale = vec3(1.0, 1.0, 1.0);
	uniform vec3 triplanar_offset;
	uniform float triplanar_sharpness = 0.5;

	varying vec3 triplanar_power_normal;
	varying vec3 triplanar_pos;
// IdMap

		vec3 GetMask(vec3 colorId, vec3 idMap) {
		float tolerance = 0.01;

		// Vector Decompose Color Id
			float colorId_R = colorId.x;
			float colorId_G = colorId.y;
			float colorId_B = colorId.z;

		// Decompose IdMap
			float idMap_R = idMap.x;
			float idMap_G = idMap.y;
			float idMap_B = idMap.z;

		// subtract R
			float result_R = colorId_R - idMap_R;

		// Compare R
			bool compare_R = (abs(result_R) < tolerance);

		// Subtract G
			float result_G = colorId_G - idMap_G;

		// Compare G
			bool compare_G = (abs(result_G) < tolerance);

		// Subtract B
			float result_B = colorId_B - idMap_B;

		// Compare B
			bool compare_B = (abs(result_B) < tolerance);

		// Divide R_G By B
			float result_R_G_B = ((compare_R ? 1.0 : 0.0) / (compare_G ? 1.0 : 0.0)) / (compare_B ? 1.0 : 0.0);
			result_R_G_B = abs(result_R_G_B) == 1.0 ? 1.0 : 0.0;
			
		// result
			return vec3(result_R_G_B);

		}
	

void vertex() {
// TextureParameterTriplanar
	{
		triplanar_power_normal = pow(abs(NORMAL), vec3(triplanar_sharpness));
		triplanar_power_normal /= dot(triplanar_power_normal, vec3(1.0));
		triplanar_pos = VERTEX * triplanar_scale + triplanar_offset;
		triplanar_pos *= vec3(1.0, -1.0, 1.0);
	}
}

void fragment() {
// Input:37
	vec2 n_out37p0 = SCREEN_UV;


// Input:33
	float n_out33p0 = TIME;


// FloatOp:36
	float n_in36p1 = 0.50000;
	float n_out36p0 = n_out33p0 * n_in36p1;


// VectorCompose:35
	float n_in35p1 = 0.00000;
	vec2 n_out35p0 = vec2(n_out36p0, n_in35p1);


// UVFunc:34
	vec2 n_in34p1 = vec2(1.00000, 1.00000);
	vec2 n_out34p0 = n_out35p0 * n_in34p1 + n_out37p0;


// TextureParameterTriplanar:32
	vec4 n_out32p0 = triplanar_texture(CoreTexture, triplanar_power_normal, triplanar_pos);


	vec4 n_out30p0;
// Texture2D:30
	n_out30p0 = texture(CoreTexture, n_out34p0);


// ColorParameter:27
	vec4 n_out27p0 = CoreColor;


// ColorConstant:17
	vec4 n_out17p0 = vec4(1.000000, 1.000000, 1.000000, 1.000000);


// IntConstant:38
	int n_out38p0 = 0;


// Texture2D:2
	vec4 n_out2p0 = textureLod(tex_frg_2, UV, float(n_out38p0));


	vec3 n_out16p0;
// IdMap:16
	{
		n_out16p0 = GetMask(vec3(n_out17p0.xyz), vec3(n_out2p0.xyz));
	}


// VectorOp:28
	vec4 n_out28p0 = n_out27p0 * vec4(n_out16p0, 0.0);


// VectorOp:31
	vec4 n_out31p0 = n_out30p0 * n_out28p0;


// ColorConstant:7
	vec4 n_out7p0 = vec4(0.000000, 1.000000, 0.000000, 1.000000);


// ColorConstant:11
	vec4 n_out11p0 = vec4(1.000000, 0.000000, 1.000000, 1.000000);


	vec3 n_out15p0;
// IdMap:15
	{
		n_out15p0 = GetMask(vec3(n_out11p0.xyz), vec3(n_out2p0.xyz));
	}


// ColorConstant:8
	vec4 n_out8p0 = vec4(1.000000, 1.000000, 0.000000, 1.000000);


	vec3 n_out13p0;
// IdMap:13
	{
		n_out13p0 = GetMask(vec3(n_out8p0.xyz), vec3(n_out2p0.xyz));
	}


// VectorOp:20
	vec3 n_out20p0 = n_out15p0 + n_out13p0;


// VectorOp:23
	vec3 n_out23p0 = vec3(n_out7p0.xyz) * n_out20p0;


// ColorConstant:6
	vec4 n_out6p0 = vec4(0.000000, 0.000000, 1.000000, 1.000000);


// ColorConstant:10
	vec4 n_out10p0 = vec4(0.000000, 1.000000, 1.000000, 1.000000);


	vec3 n_out14p0;
// IdMap:14
	{
		n_out14p0 = GetMask(vec3(n_out10p0.xyz), vec3(n_out2p0.xyz));
	}


	vec3 n_out12p0;
// IdMap:12
	{
		n_out12p0 = GetMask(vec3(n_out7p0.xyz), vec3(n_out2p0.xyz));
	}


// VectorOp:19
	vec3 n_out19p0 = n_out14p0 + n_out12p0;


// VectorOp:22
	vec3 n_out22p0 = vec3(n_out6p0.xyz) * n_out19p0;


// VectorOp:24
	vec4 n_out24p0 = vec4(n_out23p0, 0.0) + vec4(n_out22p0, 0.0);


// ColorConstant:5
	vec4 n_out5p0 = vec4(1.000000, 0.000000, 0.000000, 1.000000);


	vec3 n_out9p0;
// IdMap:9
	{
		n_out9p0 = GetMask(vec3(n_out6p0.xyz), vec3(n_out2p0.xyz));
	}


	vec3 n_out3p0;
// IdMap:3
	{
		n_out3p0 = GetMask(vec3(n_out5p0.xyz), vec3(n_out2p0.xyz));
	}


// VectorOp:18
	vec3 n_out18p0 = n_out9p0 + n_out3p0;


// VectorOp:21
	vec3 n_out21p0 = vec3(n_out5p0.xyz) * n_out18p0;


// VectorOp:25
	vec4 n_out25p0 = n_out24p0 + vec4(n_out21p0, 0.0);


// VectorOp:26
	vec4 n_out26p0 = n_out31p0 + n_out25p0;


// Output:0
	ALBEDO = vec3(n_out26p0.xyz);
	EMISSION = vec3(n_out31p0.xyz);


}
"
graph_offset = Vector2(-140.789, -6.12546)
nodes/vertex/0/position = Vector2(920, 260)
nodes/fragment/0/position = Vector2(560, 40)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_ta8pb")
nodes/fragment/2/position = Vector2(-1080, 700)
nodes/fragment/3/node = SubResource("VisualShaderNodeCustom_b7iq7")
nodes/fragment/3/position = Vector2(-720, 740)
nodes/fragment/5/node = SubResource("VisualShaderNodeColorConstant_de2k7")
nodes/fragment/5/position = Vector2(-1020, 620)
nodes/fragment/6/node = SubResource("VisualShaderNodeColorConstant_phpm1")
nodes/fragment/6/position = Vector2(-1020, 540)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorConstant_o4e6d")
nodes/fragment/7/position = Vector2(-1020, 460)
nodes/fragment/8/node = SubResource("VisualShaderNodeColorConstant_3b5rj")
nodes/fragment/8/position = Vector2(-1020, 300)
nodes/fragment/9/node = SubResource("VisualShaderNodeCustom_me417")
nodes/fragment/9/position = Vector2(-720, 620)
nodes/fragment/10/node = SubResource("VisualShaderNodeColorConstant_lkwsp")
nodes/fragment/10/position = Vector2(-1020, 380)
nodes/fragment/11/node = SubResource("VisualShaderNodeColorConstant_qudjx")
nodes/fragment/11/position = Vector2(-1020, 220)
nodes/fragment/12/node = SubResource("VisualShaderNodeCustom_npkb6")
nodes/fragment/12/position = Vector2(-720, 520)
nodes/fragment/13/node = SubResource("VisualShaderNodeCustom_m42po")
nodes/fragment/13/position = Vector2(-720, 320)
nodes/fragment/14/node = SubResource("VisualShaderNodeCustom_l2k2c")
nodes/fragment/14/position = Vector2(-720, 420)
nodes/fragment/15/node = SubResource("VisualShaderNodeCustom_wpkxf")
nodes/fragment/15/position = Vector2(-720, 220)
nodes/fragment/16/node = SubResource("VisualShaderNodeCustom_8yeyg")
nodes/fragment/16/position = Vector2(-500, 60)
nodes/fragment/17/node = SubResource("VisualShaderNodeColorConstant_dcxqm")
nodes/fragment/17/position = Vector2(-1020, 140)
nodes/fragment/18/node = SubResource("VisualShaderNodeVectorOp_0gp8y")
nodes/fragment/18/position = Vector2(-500, 620)
nodes/fragment/19/node = SubResource("VisualShaderNodeVectorOp_u22jc")
nodes/fragment/19/position = Vector2(-500, 420)
nodes/fragment/20/node = SubResource("VisualShaderNodeVectorOp_wm844")
nodes/fragment/20/position = Vector2(-500, 220)
nodes/fragment/21/node = SubResource("VisualShaderNodeVectorOp_h2aen")
nodes/fragment/21/position = Vector2(-260, 500)
nodes/fragment/22/node = SubResource("VisualShaderNodeVectorOp_yqupr")
nodes/fragment/22/position = Vector2(-260, 320)
nodes/fragment/23/node = SubResource("VisualShaderNodeVectorOp_s4jx1")
nodes/fragment/23/position = Vector2(-260, 160)
nodes/fragment/24/node = SubResource("VisualShaderNodeVectorOp_43k21")
nodes/fragment/24/position = Vector2(-80, 220)
nodes/fragment/25/node = SubResource("VisualShaderNodeVectorOp_xnprb")
nodes/fragment/25/position = Vector2(80, 340)
nodes/fragment/26/node = SubResource("VisualShaderNodeVectorOp_s3j40")
nodes/fragment/26/position = Vector2(300, 180)
nodes/fragment/27/node = SubResource("VisualShaderNodeColorParameter_uqxyv")
nodes/fragment/27/position = Vector2(-1040, -80)
nodes/fragment/28/node = SubResource("VisualShaderNodeVectorOp_ssmoy")
nodes/fragment/28/position = Vector2(-260, -80)
nodes/fragment/30/node = SubResource("VisualShaderNodeTexture_jw6el")
nodes/fragment/30/position = Vector2(-580, -300)
nodes/fragment/31/node = SubResource("VisualShaderNodeVectorOp_jxefm")
nodes/fragment/31/position = Vector2(160, -160)
nodes/fragment/32/node = SubResource("VisualShaderNodeTextureParameterTriplanar_isqif")
nodes/fragment/32/position = Vector2(-1060, -420)
nodes/fragment/33/node = SubResource("VisualShaderNodeInput_7en48")
nodes/fragment/33/position = Vector2(-2220, -200)
nodes/fragment/34/node = SubResource("VisualShaderNodeUVFunc_qh4xw")
nodes/fragment/34/position = Vector2(-1340, -320)
nodes/fragment/35/node = SubResource("VisualShaderNodeVectorCompose_tueox")
nodes/fragment/35/position = Vector2(-1580, -260)
nodes/fragment/36/node = SubResource("VisualShaderNodeFloatOp_8oygu")
nodes/fragment/36/position = Vector2(-1860, -240)
nodes/fragment/37/node = SubResource("VisualShaderNodeInput_h7ki5")
nodes/fragment/37/position = Vector2(-1700, -360)
nodes/fragment/38/node = SubResource("VisualShaderNodeIntConstant_hlrwq")
nodes/fragment/38/position = Vector2(-1260, 820)
nodes/fragment/39/node = SubResource("VisualShaderNodeFloatConstant_c01am")
nodes/fragment/39/position = Vector2(280, 400)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 1, 5, 0, 3, 0, 6, 0, 9, 0, 7, 0, 12, 0, 8, 0, 13, 0, 10, 0, 14, 0, 11, 0, 15, 0, 17, 0, 16, 0, 2, 0, 9, 1, 2, 0, 12, 1, 2, 0, 13, 1, 2, 0, 15, 1, 2, 0, 16, 1, 2, 0, 14, 1, 9, 0, 18, 0, 3, 0, 18, 1, 14, 0, 19, 0, 12, 0, 19, 1, 13, 0, 20, 1, 15, 0, 20, 0, 5, 0, 21, 0, 18, 0, 21, 1, 6, 0, 22, 0, 19, 0, 22, 1, 7, 0, 23, 0, 20, 0, 23, 1, 23, 0, 24, 0, 22, 0, 24, 1, 24, 0, 25, 0, 21, 0, 25, 1, 25, 0, 26, 1, 27, 0, 28, 0, 16, 0, 28, 1, 30, 0, 31, 0, 28, 0, 31, 1, 32, 1, 30, 2, 34, 0, 30, 0, 35, 0, 34, 2, 31, 0, 0, 5, 26, 0, 0, 0, 31, 0, 26, 0, 33, 0, 36, 0, 38, 0, 2, 1, 37, 0, 34, 0, 36, 0, 35, 0)
